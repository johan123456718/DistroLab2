@model DistroLab2.Models.ViewModels.SendFormViewModel


@{
    ViewData["Title"] = "Send";
}

<h1>Send message</h1>

@{
    if(Model.MessageViewModel != null)
    {
    <h4>@Model.MessageViewModel.Recipant</h4>
    }
}


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Send">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="MessageViewModel.Recipant" class="control-label"></label>


                <select asp-for="MessageViewModel.Recipant" asp-items="@(Model.Users)" class="form-control"></select>

                <span asp-validation-for="MessageViewModel.Recipant" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MessageViewModel.Title" class="control-label"></label>
                <input asp-for="MessageViewModel.Title" class="form-control" />
                <span asp-validation-for="MessageViewModel.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MessageViewModel.Content" class="control-label"></label>
                <textarea asp-for="MessageViewModel.Content" class="form-control"></textarea>
                <span asp-validation-for="MessageViewModel.Content" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" value="Send" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
   <h3>@TempData["confirmData"] </h3>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
